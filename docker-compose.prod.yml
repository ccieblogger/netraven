version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: netraven-frontend-prod
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile.prod
    container_name: netraven-api-prod
    ports:
      - "8000:8000"
    env_file:
      - .env.prod
    environment:
      - NETRAVEN_ENV=prod
      - NETRAVEN_DATABASE__URL=postgresql+psycopg2://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_SCHEDULER__REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  postgres:
    image: postgres:14
    container_name: netraven-postgres-prod
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-prod:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=netraven
      - POSTGRES_PASSWORD=netraven
      - POSTGRES_DB=netraven
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U netraven"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  redis:
    image: redis:7.0
    container_name: netraven-redis-prod
    volumes:
      - redis-data-prod:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  worker:
    build:
      context: .
      dockerfile: docker/api/Dockerfile.prod
    container_name: netraven-worker-prod
    entrypoint: ["/app/docker/api/entrypoint.sh", "worker"]
    depends_on:
      - redis
      - postgres
    environment:
      - NETRAVEN_ENV=prod
      - NETRAVEN_DATABASE__URL=postgresql+psycopg2://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_SCHEDULER__REDIS_URL=redis://redis:6379/0
      - NETRAVEN_LOGGING__FILE__PATH=/data/logs/worker/worker.log
    volumes:
      - ./host-logs/netraven/worker:/data/logs/worker
    healthcheck:
      test: ["CMD", "/app/worker_healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  scheduler:
    build:
      context: .
      dockerfile: docker/api/Dockerfile.prod
    container_name: netraven-scheduler-prod
    entrypoint: ["/app/docker/api/entrypoint.sh", "scheduler"]
    depends_on:
      - redis
      - postgres
    environment:
      - NETRAVEN_ENV=prod
      - NETRAVEN_DATABASE__URL=postgresql+psycopg2://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_SCHEDULER__REDIS_URL=redis://redis:6379/0
      - NETRAVEN_LOGGING__FILE__PATH=/data/logs/scheduler/scheduler.log
    volumes:
      - ./host-logs/netraven/scheduler:/data/logs/scheduler
    healthcheck:
      test: ["CMD", "pgrep", "-f", "netraven.scheduler.scheduler_runner"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres-data-prod:
  redis-data-prod:

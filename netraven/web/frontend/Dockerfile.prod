# Build stage
FROM node:18-alpine AS build

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install

# Install required Babel dependencies for linting
RUN npm install --save-dev @babel/core @babel/eslint-parser @babel/preset-env

# Copy source code
COPY . .

# Run linting and fix auto-fixable issues (will not fail the build if there are issues)
RUN npm run lint -- --fix || echo "Linting issues found. Review logs for details."

# Build the application
RUN npm run build

# Production stage
FROM nginx:stable-alpine AS production

# Create a non-root user with UID/GID 1001
RUN addgroup -S netraven -g 1001 && \
    adduser -S -G netraven -u 1001 netraven

# Create directory structure and fix permissions
RUN mkdir -p /var/cache/nginx /var/run && \
    chown -R netraven:netraven /var/cache/nginx /var/run

# Copy built files from build stage to nginx serve directory
COPY --from=build /app/dist /usr/share/nginx/html
RUN chown -R netraven:netraven /usr/share/nginx/html

# Copy custom nginx config for non-root operation
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Switch to non-root user
USER netraven

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 
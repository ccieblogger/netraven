version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile.dev
    container_name: netraven-frontend-dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://api:8000
    command: npm run dev

  nginx:
    image: nginx:1.25
    container_name: netraven-nginx-dev
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/security-headers.conf:/etc/nginx/conf.d/security-headers.conf
    depends_on:
      - frontend
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: netraven-api-dev
    ports:
      - "8000:8000"
    volumes:
      - ./host-logs/netraven/api:/data/logs/api
    env_file:
      - .env.dev
    environment:
      - NETRAVEN_ENV=dev
      - NETRAVEN_DATABASE__URL=postgresql+psycopg2://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_SCHEDULER__REDIS_URL=redis://redis:6379/0
      - NETRAVEN_SECURITY__ENCRYPTION_KEY=dev_encryption_key_replace_in_production
      - NETRAVEN_SECURITY__ENCRYPTION_SALT=dev_encryption_salt_replace_in_production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  postgres:
    image: postgres:14
    container_name: netraven-postgres-dev
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=netraven
      - POSTGRES_PASSWORD=netraven
      - POSTGRES_DB=netraven
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U netraven"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7.0
    container_name: netraven-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data: 
version: '3'

services:
  # PostgreSQL database service
  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_USER=netraven
      - POSTGRES_PASSWORD=netraven
      - POSTGRES_DB=netraven
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U netraven"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Backend API service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    volumes:
      - .:/app
      - logs_data:/app/logs
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_WEB_DB_TYPE=postgres
      - NETRAVEN_WEB_DB_HOST=postgres
      - NETRAVEN_WEB_DB_PORT=5432
      - NETRAVEN_WEB_DB_NAME=netraven
      - NETRAVEN_WEB_DB_USER=netraven
      - NETRAVEN_WEB_DB_PASSWORD=netraven
      - NETRAVEN_CONFIG=/app/config.yml
      - NETRAVEN_LOGGING_RETENTION_DAYS=30
      - NETRAVEN_LOGGING_USE_DATABASE=true
      - NETRAVEN_LOGGING_LOG_TO_FILE=false
      - GATEWAY_API_KEY=netraven-api-key
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-X", "GET", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Scheduler service
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - logs_data:/app/logs
    working_dir: /app
    command: >
      bash -c "cd /app && \
      python scripts/run_scheduler.py --check-interval 60 --sync-interval 300 --log-level INFO --use-gateway"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_WEB_DB_TYPE=postgres
      - NETRAVEN_WEB_DB_HOST=postgres
      - NETRAVEN_WEB_DB_PORT=5432
      - NETRAVEN_WEB_DB_NAME=netraven
      - NETRAVEN_WEB_DB_USER=netraven
      - NETRAVEN_WEB_DB_PASSWORD=netraven
      - NETRAVEN_CONFIG=/app/config.yml
      - NETRAVEN_LOGGING_RETENTION_DAYS=30
      - NETRAVEN_LOGGING_USE_DATABASE=true
      - NETRAVEN_LOGGING_LOG_TO_FILE=false
      - GATEWAY_API_KEY=netraven-scheduler-key
      - GATEWAY_URL=http://device_gateway:8001
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy
      device_gateway:
        condition: service_healthy
    restart: unless-stopped

  # Device Gateway service
  device_gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "8001:8001"
    volumes:
      - .:/app
      - logs_data:/app/logs
    environment:
      - PYTHONPATH=/app
      - NETRAVEN_CONFIG=/app/config.yml
      - NETRAVEN_LOGGING_RETENTION_DAYS=30
      - NETRAVEN_LOGGING_USE_DATABASE=true
      - NETRAVEN_LOGGING_LOG_TO_FILE=true
      - NETRAVEN_LOGGING_LOG_DIR=/app/logs
      - GATEWAY_JWT_SECRET=dev-jwt-secret-for-testing
      - GATEWAY_API_KEY=netraven-api-key
      - DATABASE_URL=postgresql://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_WEB_DB_TYPE=postgres
      - NETRAVEN_WEB_DB_HOST=postgres
      - NETRAVEN_WEB_DB_PORT=5432
      - NETRAVEN_WEB_DB_NAME=netraven
      - NETRAVEN_WEB_DB_USER=netraven
      - NETRAVEN_WEB_DB_PASSWORD=netraven
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-X", "GET", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend service
  frontend:
    build:
      context: ./netraven/web/frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./netraven/web/frontend:/app
      # Use a named volume for node_modules to prevent overwriting
      - frontend_node_modules:/app/node_modules
    ports:
      - "8080:8080"
    depends_on:
      - api
      - device_gateway
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_GATEWAY_URL=http://localhost:8001
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "node"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Non-root user for security
    user: "1001:1001"

volumes:
  frontend_node_modules:
  postgres_data:
  logs_data: 
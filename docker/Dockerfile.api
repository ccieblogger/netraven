# This Dockerfile is used to build the Backend API container for NetRaven.
# The API serves as the central communication layer for the application.

FROM python:3.10-slim

# Add build argument for environment
ARG NETRAVEN_ENV=prod

# Install curl for health check and other utilities
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create a non-root user and group
RUN groupadd -g 1001 netraven && \
    useradd -u 1001 -g netraven -m -s /bin/bash netraven

# Create directories for non-root operations
RUN mkdir -p /app /app/logs /app/data /app/test-artifacts /tmp/netmiko_logs && \
    chown -R netraven:netraven /app && \
    chmod 777 /tmp/netmiko_logs

# Create Python cache directories with appropriate permissions
RUN mkdir -p /.local /.cache && \
    chmod -R 777 /.local /.cache

WORKDIR /app

# Copy dependencies files
COPY requirements.txt .
COPY test-requirements.txt .

# Install dependencies based on environment
RUN pip install --no-cache-dir -r requirements.txt && \
    if [ "$NETRAVEN_ENV" = "test" ]; then \
        echo "Installing test dependencies..." && \
        pip install --no-cache-dir -r test-requirements.txt && \
        # Clean up
        apt-get clean && \
        rm -rf /var/lib/apt/lists/*; \
    fi

# Copy only the needed files
COPY netraven/ netraven/
COPY docker/ docker/
COPY tests/ tests/
COPY scripts/ scripts/

# Make entrypoint and scripts executable
RUN chmod +x docker/entrypoint.sh
RUN chmod +x scripts/*.py scripts/*.sh

# Set environment variables
ENV PYTHONPATH=/app
ENV SERVICE_TYPE=api
ENV BUILD_ENVIRONMENT=${NETRAVEN_ENV}
ENV NETMIKO_LOG_DIR=/tmp/netmiko_logs

# Set permissions for test artifacts directory
RUN chmod 777 /app/test-artifacts

EXPOSE 8000

# Run as non-root user for health checks, etc.
USER netraven

# Run entrypoint
ENTRYPOINT ["/app/docker/entrypoint.sh"]
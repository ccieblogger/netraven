# This Dockerfile is used to build the Backend API container for NetRaven.
# The API serves as the central communication layer for the application.

# Build stage
FROM python:3.10-slim as builder

# Add build argument for environment
ARG NETRAVEN_ENV=prod

WORKDIR /build

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy only dependency files first
COPY requirements.txt .
COPY test-requirements.txt .

# Create virtual environment and install dependencies
RUN python -m venv /opt/venv && \
    . /opt/venv/bin/activate && \
    pip install --no-cache-dir -r requirements.txt && \
    if [ "$NETRAVEN_ENV" = "test" ]; then \
        pip install --no-cache-dir -r test-requirements.txt; \
    fi

# Runtime stage
FROM python:3.10-slim

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user and group
RUN groupadd -g 1001 netraven && \
    useradd -u 1001 -g netraven -m -s /bin/bash netraven

# Create directories and set permissions in a single layer
RUN mkdir -p /app/{logs,data,test-artifacts,scripts} /tmp/netmiko_logs && \
    chown -R netraven:netraven /app && \
    chmod 777 /tmp/netmiko_logs && \
    mkdir -p /.local /.cache && \
    chmod -R 777 /.local /.cache

WORKDIR /app

# Copy application code
COPY --chown=netraven:netraven netraven/ netraven/
COPY --chown=netraven:netraven docker/ docker/
COPY --chown=netraven:netraven tests/ tests/
COPY --chown=netraven:netraven scripts/ scripts/

# Make scripts executable
RUN chmod +x docker/entrypoint.sh scripts/*.py scripts/*.sh

# Set environment variables
ENV PYTHONPATH=/app \
    SERVICE_TYPE=api \
    BUILD_ENVIRONMENT=${NETRAVEN_ENV} \
    NETMIKO_LOG_DIR=/tmp/netmiko_logs

# Set permissions for test artifacts directory
RUN chmod 777 /app/test-artifacts

EXPOSE 8000

# Run as non-root user
USER netraven

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/health || exit 1

# Run entrypoint
ENTRYPOINT ["/app/docker/entrypoint.sh"]
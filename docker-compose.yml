version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: netraven-frontend-dev
    ports:
      - "5173:5173"
    volumes:
      # Mount source code for live updates
      - ./frontend:/app
      # Use a named volume for node_modules to avoid overwriting with host directory
      - frontend-node-modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    # Simplify command since we've verified Node.js works in the Dockerfile
    command: npm run dev
    # Add healthcheck to verify the service is working
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5173 || exit 1
      interval: 30s  # Increased from 10s to 30s
      timeout: 10s   # Increased from 5s to 10s
      retries: 5
      start_period: 30s  # Give it 30s before starting health checks
    # Ensure container restarts if it fails
    restart: unless-stopped

  postgres:
    image: postgres:14
    container_name: netraven-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=netraven
      - POSTGRES_PASSWORD=netraven
      - POSTGRES_DB=netraven
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U netraven"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7.0
    container_name: netraven-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  frontend-node-modules:
  redis-data:
  postgres-data:

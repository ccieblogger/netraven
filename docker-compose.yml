version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: netraven-frontend
    ports:
      - "80:80"
      # Uncomment below if you have SSL configured in nginx.conf and certificates in place
      # - "443:443"
    depends_on:
      - api
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: netraven-api
    ports:
      - "8000:8000"
    volumes:
      - ./host-logs/netraven/api:/data/logs/api
      - ./docker/fernet_key/fernet.key:/app/docker/fernet_key/fernet.key:ro
    env_file:
      - .env.prod
    environment:
      - NETRAVEN_ENV=prod
      - NETRAVEN_DATABASE__URL=postgresql+psycopg2://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_SCHEDULER__REDIS_URL=redis://redis:6379/0
      - NETRAVEN_SECURITY__ENCRYPTION_SALT=prod_encryption_salt_replace_in_production
    entrypoint: ["/app/docker/api/entrypoint.sh"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  postgres:
    image: postgres:14
    container_name: netraven-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=netraven
      - POSTGRES_PASSWORD=netraven
      - POSTGRES_DB=netraven
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U netraven"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7.0
    container_name: netraven-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    container_name: netraven-worker
    entrypoint: ["/app/docker/worker/entrypoint.sh"]
    depends_on:
      - redis
      - postgres
    environment:
      - NETRAVEN_ENV=prod
      - NETRAVEN_DATABASE__URL=postgresql+psycopg2://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_SCHEDULER__REDIS_URL=redis://redis:6379/0
      - NETRAVEN_SECURITY__ENCRYPTION_SALT=prod_encryption_salt_replace_in_production
      - NETRAVEN_LOGGING__FILE__PATH=/data/logs/worker/worker.log
    volumes:
      - ./host-logs/netraven/worker:/data/logs/worker
      - ./docker/fernet_key/fernet.key:/app/docker/fernet_key/fernet.key:ro
    healthcheck:
      test: ["CMD", "/app/worker_healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  scheduler:
    build:
      context: .
      dockerfile: docker/scheduler/Dockerfile
    container_name: netraven-scheduler
    entrypoint: ["/app/docker/scheduler/entrypoint.sh"]
    depends_on:
      - redis
      - postgres
    environment:
      - NETRAVEN_ENV=prod
      - NETRAVEN_DATABASE__URL=postgresql+psycopg2://netraven:netraven@postgres:5432/netraven
      - NETRAVEN_SCHEDULER__REDIS_URL=redis://redis:6379/0
      - NETRAVEN_LOGGING__FILE__PATH=/data/logs/scheduler/scheduler.log
    volumes:
      - ./host-logs/netraven/scheduler:/data/logs/scheduler
    healthcheck:
      test: ["CMD", "pgrep", "-f", "netraven.scheduler.scheduler_runner"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  rq-scheduler:
    build:
      context: .
      dockerfile: docker/rq_scheduler/Dockerfile
    container_name: netraven-rq
    entrypoint: ["/app/docker/rq_scheduler/entrypoint.sh"]
    depends_on:
      - redis
      - postgres
    environment:
      - NETRAVEN_ENV=prod
      - NETRAVEN_SCHEDULER__REDIS_URL=redis://redis:6379/0
      - NETRAVEN_LOGGING__FILE__PATH=/data/logs/rq_scheduler/rq_scheduler.log
    volumes:
      - ./host-logs/netraven/rq_scheduler:/data/logs/rq_scheduler
    healthcheck:
      test: ["CMD", "pgrep", "-f", "rq_scheduler_runner"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data: